{"message":"/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage com.mycompany.demo1;\r\n\r\n/**\r\n *\r\n * @author ADMIN\r\n */\r\n/* * Server waits for a connection to be established by client **/\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.net.*;\r\nimport java.io.*;\r\nimport javax.swing.JOptionPane;\r\npublic class Server extends JFrame implements ActionListener {\r\n    public static String filename;\r\n    public static String temp;\r\n    AES aes = new AES();\r\n    public long startTime;\r\n    public long endTime;\r\n    public long totalTime;\r\n    PasswordDialog p=new PasswordDialog();\r\n    String str11 = new String();\r\n    public String decr;\r\n    public static RandomAccessFile f;\r\n    private static JTextArea txtEnc;\r\n    private static JTextArea txtDec;\r\n    public static void main(String args[]){\r\n    try{\r\n    Server s = new Server();\r\n    System.out.println(\"Server running...\");\r\n    JOptionPane.showMessageDialog(s,\"Server Running\");\r\n    // Listen on port 5555\r\n    ServerSocket server = new ServerSocket(5555);\r\n    // Accept the sk \r\n    Socket sk = server.accept();\r\n    System.out.println(\"Server accepted client\");\r\n    JOptionPane.showMessageDialog(s,\"Server accepted client\");\r\n    InputStream input = sk.getInputStream();\r\n    BufferedReader inReader = new BufferedReader(new InputStreamReader(sk.getInputStream()));\r\n    BufferedWriter outReader = new BufferedWriter(new OutputStreamWriter(sk.getOutputStream()));\r\n    // Read the filename\r\n    filename = inReader.readLine();\r\n    if ( !filename.equals(\"\") ){\r\n    // Reply back to client with READY status\r\n    outReader.write(\"READYn\");\r\n    outReader.flush();\r\n    }\r\n    // Create a new file in the tmp directory using the filename \r\n    FileOutputStream wr = new FileOutputStream(new File(\"C://Users/SHREEKANT/Desktop/AES/enc\" + filename));\r\n    byte[] buffer = new byte[sk.getReceiveBufferSize()]; int bytesReceived = 0;\r\n    while((bytesReceived = input.read(buffer))>0){\r\n        /* Write to the file */\r\n        wr.write(buffer,0,bytesReceived);\r\n        } \r\n        JOptionPane.showMessageDialog(s,\"Encrypted File Saved sucessfullynPath:C://Users/SHREEKANT/Desktop/AES/enc\"+ filename);\r\n        s.Servergui();\r\n        try {\r\n            f = new RandomAccessFile(\"C://Users/SHREEKANT/Desktop/AES/enc\" + filename,\"r\");\r\n        }\r\n        catch (FileNotFoundException e1) { \r\n        // TODO Auto-generated catch block\r\n        e1.printStackTrace();\r\n        } \r\n        long longlength = 0;\r\n        try {\r\n            longlength = f.length();\r\n        } \r\n        catch (IOException e1) {\r\n        // TODO Auto-generated catch block \r\n            e1.printStackTrace();\r\n        }\r\n        int length = (int) longlength;\r\n        // Read file and return data\r\n        byte[] data = new byte[length];\r\n        try {\r\n            f.readFully(data); f.close();\r\n        } \r\n        catch (IOException e1) {\r\n            // TODO Auto-generated catch block \r\n            e1.printStackTrace();\r\n        } \r\n        temp=new String(data); \r\n        txtEnc.setText(temp);\r\n        }\r\n        catch(Exception e){\r\n            System.err.println(e);\r\n        }\r\n    }\r\n    void Servergui() {\r\n        JFrame frame = new JFrame();\r\n        frame.setTitle(\"Server\");\r\n        frame.setVisible(true);\r\n        frame.setSize(150,100);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        GridLayout layout = new GridLayout(3,1,3,3);\r\n        JMenuBar mymenu = new JMenuBar();\r\n        mymenu.setOpaque(true);\r\n        mymenu.setBackground(new Color(154, 165, 127));\r\n        mymenu.setPreferredSize(new Dimension(30,20));\r\n        frame.setJMenuBar(mymenu);\r\n        JLabel lblEnc = new JLabel(\"Encrypted Text\");\r\n        lblEnc.setPreferredSize(new Dimension(5,15));\r\n        txtEnc = new JTextArea(5,10);\r\n        txtEnc.setLineWrap(true);\r\n        txtEnc.setEditable(false);\r\n        txtEnc.setPreferredSize(new Dimension(5,15));\r\n        JScrollPane scrollPane1= new JScrollPane (txtEnc,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\r\n        JLabel lblDec = new JLabel(\"Decrypted Text\");\r\n        lblDec.setPreferredSize(new Dimension(5,15));\r\n        txtDec= new JTextArea(5,10);\r\n        txtDec.setLineWrap(true);\r\n        txtDec.setEditable(false);\r\n        txtDec.setPreferredSize(new Dimension(5,15));\r\n        JScrollPane scrollPane11= new JScrollPane(txtDec,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\r\n        JButton btnDec = new JButton(\"Decrypt\"); btnDec.setPreferredSize(new Dimension(5,15)); btnDec.addActionListener(this);\r\n        JButton btnExit = new JButton(\"Exit\");\r\n        btnDec.setPreferredSize(new Dimension(5,15));\r\n        btnExit.addActionListener(new Quit());\r\n        JPanel mainPanel = new JPanel();\r\n        mainPanel.setLayout(layout);\r\n        mainPanel.add(lblEnc);\r\n        //mainPanel.add(txtEnc);\r\n        mainPanel.add(scrollPane1);\r\n        mainPanel.add(lblDec);\r\n        // mainPanel.add(txtDec);\r\n        mainPanel.add(scrollPane11);\r\n        mainPanel.add(btnDec);\r\n        mainPanel.add(btnExit);\r\n        frame.getContentPane().add(mainPanel);\r\n        frame.pack(); frame.setVisible(true);\r\n    }\r\n    @Override public void actionPerformed(ActionEvent e) {\r\n    // TODO Auto-generated method stu \r\n    try {\r\n         f = new RandomAccessFile(\"C://Users/SHREEKANT/Desktop/AES/enc\" + filename,\"r\");\r\n    }\r\n    catch (FileNotFoundException e2){\r\n    // TODO Auto-generated catch block \r\n        e2.printStackTrace();\r\n    }\r\n    long longlength = 0;\r\n    try { longlength = f.length();\r\n    } catch (IOException e1) {\r\n    // TODO Auto-generated catch block \r\n        e1.printStackTrace();\r\n    } \r\n    int length = (int) longlength;\r\n    // Read file and return data \r\n    byte[] data = new byte[length];\r\n    try { f.readFully(data);\r\n    } \r\n    catch (IOException e1) {\r\n        // TODO Auto-generated catch block\r\n        e1.printStackTrace();\r\n    } \r\n    temp=new String(data);\r\n    txtEnc.setText(temp);\r\n    str11 = PasswordDialog.password(1);\r\n    byte[] key=str11.getBytes();\r\n    try{\r\n        startTime = System.currentTimeMillis();\r\n        byte[] dec=AES.decrypt(data, key);\r\n        endTime = System.currentTimeMillis();\r\n        totalTime = endTime - startTime;\r\n        temp=new String(dec);\r\n        txtDec.setText(temp);\r\n        JOptionPane.showMessageDialog(this,\"Time taken to Decrypt: \"+totalTime+\" ms \");\r\n    } \r\n    catch(Exception ex) { \r\n        JOptionPane.showMessageDialog(this,ex.getMessage()); \r\n    } \r\n    \r\n} \r\n} \r\n/*ReadFileString:\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.Scanner;\r\npublic class ReadFileString { \r\npublic String rfs (String path) throws Exception {\r\ntry{ \r\n    String entireFileText = new Scanner(new File(path)) .useDelimiter(\"A\").next(); \r\n    return entireFileText;\r\n}\r\ncatch(Exception e){\r\n    System.err.println(e); \r\n    return null;\r\n    } \r\n    \r\n} } \r\n//Imports are listed in full to show what's being used \r\n//could just import javax.swing.* and java.awt.* etc..\r\n//*import javax.swing.JFrame;\r\nimport javax.swing.JOptionPane;\r\nimport javax.swing.JTextField; \r\nimport javax.swing.JTextArea;\r\nimport javax.swing.JPasswordField;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JLabel;\r\nimport java.awt.GridLayout;\r\nimport java.util.Arrays;\r\nimport java.awt.EventQueue;*/\r\n\r\n\r\n    \r\n        \r\n","key":"jfyuiythgds45/*-+","keylen":"256","outputFile":"aes.bin","aes_mode":"OFB","iv":"abc123/*-+"}